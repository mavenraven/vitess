// Code generated by protoc-gen-go. DO NOT EDIT.
// source: provision.proto

package provision

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Code int32

const (
	Code_OK      Code = 0
	Code_UNKNOWN Code = 1
)

var Code_name = map[int32]string{
	0: "OK",
	1: "UNKNOWN",
}

var Code_value = map[string]int32{
	"OK":      0,
	"UNKNOWN": 1,
}

func (x Code) String() string {
	return proto.EnumName(Code_name, int32(x))
}

func (Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3500c3a98af60624, []int{0}
}

type RequestCreateKeyspaceRequest struct {
	Keyspace             string   `protobuf:"bytes,1,opt,name=keyspace,proto3" json:"keyspace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestCreateKeyspaceRequest) Reset()         { *m = RequestCreateKeyspaceRequest{} }
func (m *RequestCreateKeyspaceRequest) String() string { return proto.CompactTextString(m) }
func (*RequestCreateKeyspaceRequest) ProtoMessage()    {}
func (*RequestCreateKeyspaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3500c3a98af60624, []int{0}
}

func (m *RequestCreateKeyspaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestCreateKeyspaceRequest.Unmarshal(m, b)
}
func (m *RequestCreateKeyspaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestCreateKeyspaceRequest.Marshal(b, m, deterministic)
}
func (m *RequestCreateKeyspaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestCreateKeyspaceRequest.Merge(m, src)
}
func (m *RequestCreateKeyspaceRequest) XXX_Size() int {
	return xxx_messageInfo_RequestCreateKeyspaceRequest.Size(m)
}
func (m *RequestCreateKeyspaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestCreateKeyspaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestCreateKeyspaceRequest proto.InternalMessageInfo

func (m *RequestCreateKeyspaceRequest) GetKeyspace() string {
	if m != nil {
		return m.Keyspace
	}
	return ""
}

type ProvisionError struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code                 Code     `protobuf:"varint,2,opt,name=code,proto3,enum=provision.Code" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProvisionError) Reset()         { *m = ProvisionError{} }
func (m *ProvisionError) String() string { return proto.CompactTextString(m) }
func (*ProvisionError) ProtoMessage()    {}
func (*ProvisionError) Descriptor() ([]byte, []int) {
	return fileDescriptor_3500c3a98af60624, []int{1}
}

func (m *ProvisionError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProvisionError.Unmarshal(m, b)
}
func (m *ProvisionError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProvisionError.Marshal(b, m, deterministic)
}
func (m *ProvisionError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvisionError.Merge(m, src)
}
func (m *ProvisionError) XXX_Size() int {
	return xxx_messageInfo_ProvisionError.Size(m)
}
func (m *ProvisionError) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvisionError.DiscardUnknown(m)
}

var xxx_messageInfo_ProvisionError proto.InternalMessageInfo

func (m *ProvisionError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ProvisionError) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_OK
}

func init() {
	proto.RegisterEnum("provision.Code", Code_name, Code_value)
	proto.RegisterType((*RequestCreateKeyspaceRequest)(nil), "provision.RequestCreateKeyspaceRequest")
	proto.RegisterType((*ProvisionError)(nil), "provision.ProvisionError")
}

func init() { proto.RegisterFile("provision.proto", fileDescriptor_3500c3a98af60624) }

var fileDescriptor_3500c3a98af60624 = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x28, 0xca, 0x2f,
	0xcb, 0x2c, 0xce, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0x59, 0x71, 0xc9, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x38, 0x17, 0xa5, 0x26, 0x96, 0xa4,
	0x7a, 0xa7, 0x56, 0x16, 0x17, 0x24, 0x26, 0xa7, 0x42, 0x05, 0x85, 0xa4, 0xb8, 0x38, 0xb2, 0xa1,
	0x42, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x70, 0xbe, 0x92, 0x3f, 0x17, 0x5f, 0x00, 0xcc,
	0x20, 0xd7, 0xa2, 0xa2, 0xfc, 0x22, 0x21, 0x09, 0x2e, 0xf6, 0xdc, 0xd4, 0xe2, 0xe2, 0xc4, 0x74,
	0x98, 0x62, 0x18, 0x57, 0x48, 0x99, 0x8b, 0x25, 0x39, 0x3f, 0x25, 0x55, 0x82, 0x49, 0x81, 0x51,
	0x83, 0xcf, 0x88, 0x5f, 0x0f, 0xe1, 0x24, 0xe7, 0xfc, 0x94, 0xd4, 0x20, 0xb0, 0xa4, 0x96, 0x34,
	0x17, 0x0b, 0x88, 0x27, 0xc4, 0xc6, 0xc5, 0xe4, 0xef, 0x2d, 0xc0, 0x20, 0xc4, 0xcd, 0xc5, 0x1e,
	0xea, 0xe7, 0xed, 0xe7, 0x1f, 0xee, 0x27, 0xc0, 0x68, 0x94, 0xc1, 0xc5, 0x09, 0xb7, 0x4d, 0x28,
	0x9a, 0x4b, 0x14, 0xab, 0xb3, 0x85, 0xd4, 0x91, 0x4c, 0xc6, 0xe7, 0x31, 0x29, 0x49, 0x24, 0x85,
	0xa8, 0xbe, 0x70, 0xd2, 0x88, 0x52, 0x2b, 0xcb, 0x2c, 0x49, 0x2d, 0x2e, 0xd6, 0xcb, 0xcc, 0xd7,
	0x87, 0xb0, 0xf4, 0xd3, 0xf3, 0xf5, 0xcb, 0x4a, 0xf4, 0xc1, 0xc1, 0xa7, 0x0f, 0xd7, 0x98, 0xc4,
	0x06, 0x16, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x85, 0xe6, 0x77, 0x62, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProvisionClient is the client API for Provision service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProvisionClient interface {
	RequestCreateKeyspace(ctx context.Context, in *RequestCreateKeyspaceRequest, opts ...grpc.CallOption) (*ProvisionError, error)
}

type provisionClient struct {
	cc *grpc.ClientConn
}

func NewProvisionClient(cc *grpc.ClientConn) ProvisionClient {
	return &provisionClient{cc}
}

func (c *provisionClient) RequestCreateKeyspace(ctx context.Context, in *RequestCreateKeyspaceRequest, opts ...grpc.CallOption) (*ProvisionError, error) {
	out := new(ProvisionError)
	err := c.cc.Invoke(ctx, "/provision.Provision/RequestCreateKeyspace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProvisionServer is the server API for Provision service.
type ProvisionServer interface {
	RequestCreateKeyspace(context.Context, *RequestCreateKeyspaceRequest) (*ProvisionError, error)
}

// UnimplementedProvisionServer can be embedded to have forward compatible implementations.
type UnimplementedProvisionServer struct {
}

func (*UnimplementedProvisionServer) RequestCreateKeyspace(ctx context.Context, req *RequestCreateKeyspaceRequest) (*ProvisionError, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestCreateKeyspace not implemented")
}

func RegisterProvisionServer(s *grpc.Server, srv ProvisionServer) {
	s.RegisterService(&_Provision_serviceDesc, srv)
}

func _Provision_RequestCreateKeyspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestCreateKeyspaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProvisionServer).RequestCreateKeyspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provision.Provision/RequestCreateKeyspace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProvisionServer).RequestCreateKeyspace(ctx, req.(*RequestCreateKeyspaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Provision_serviceDesc = grpc.ServiceDesc{
	ServiceName: "provision.Provision",
	HandlerType: (*ProvisionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestCreateKeyspace",
			Handler:    _Provision_RequestCreateKeyspace_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "provision.proto",
}
